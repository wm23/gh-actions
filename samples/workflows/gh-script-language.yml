name: Create Issue

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push: 
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions: write-all
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "Hello, GitHub script!"

      - name: Create issue
        uses: actions/github-script@v6
        id: create-issue
        with:
          # https://octokit.github.io/rest.js/v18#issues-create
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const create = await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "New issue created",
              body: 'Heres some base data'
            })
            console.log('create', create)
            return create.data.number

      - name: Update issue
        uses: actions/github-script@v6
        with:
          # https://octokit.github.io/rest.js/v18#issues-create
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: "${{ steps.create-issue.outputs.result }}",
              title: "New issue created",
              body: 'Adding a comment!'
            })
